import Head from "next/head";
import { useState } from "react";
import hexSorter from "hexsorter";

export default function Home() {
  const [value, setValue] = useState("");
  const [colors, setColor] = useState([]);
  const [sort, setSort] = useState("saturation");
  const createColorArray = (string) => {
    return string.split(/\r\n|\r|\n/);
  };
  const sortByBrightness = (array) => {
    return hexSorter.sortColors(array, "mostBrightColor");
  };
  const sortBySaturation = (array) => {
    return hexSorter.sortColors(array, "mostSaturatedColor");
  };
  const handleChange = (e) => {
    setValue(e.target.value);
  };
  const handleSortType = (e) => {
    setSort(e.target.value);
  };
  const handleClick = (e) => {
    e.preventDefault();

    const colorArray = createColorArray(value).filter(
      (element) => element.length > 1
    );

    const is3Digits = (string) => {
      return string.length === 3 + 1;
    };
    const convert3to6 = (string3Digits) => {
      const sixLetters = [...string3Digits.replace("#", "")].map((element) => {
        return element.repeat(2);
      });
      return ["#", ...sixLetters].join("");
    };

    const formatted = colorArray.map((element) => {
      return is3Digits(element) ? convert3to6(element) : element;
    });

    switch (sort) {
      case "saturation":
        setColor(sortBySaturation(formatted));
        break;
      case "brightness":
        setColor(sortByBrightness(formatted));
        break;
      default:
        break;
    }
  };
  return (
    <div>
      <Head>
        <title>Hex color sorter</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <textarea
          onChange={handleChange}
          rows="10"
          cols="50"
          placeholder="#aaaaaa&#13;#bbbbbb&#13;#cccccc"
        />
        <div>
          <label htmlFor="saturation">
            <input
              type="radio"
              id="saturation"
              value="saturation"
              onChange={handleSortType}
              checked={sort === "saturation"}
            />
            彩度
          </label>
          <label htmlFor="brightness">
            <input
              type="radio"
              id="brightness"
              value="brightness"
              onChange={handleSortType}
              checked={sort === "brightness"}
            />
            明度
          </label>
        </div>
        <div>
          <button onClick={handleClick}>sort</button>
        </div>
        <div>
          <ul>
            {colors.map((element, index) => (
              <li key={index} style={{ backgroundColor: element }}>
                {element}
              </li>
            ))}
          </ul>
        </div>
      </main>
    </div>
  );
}
